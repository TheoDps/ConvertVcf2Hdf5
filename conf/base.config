process {

  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 7.GB * task.attempt, 'memory' ) }
  time = { check_max( 4.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

    withName: CountSamples {
        memory = { check_max( 1.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = { 5.minute }
        clusterOptions = '--job-name=CountSamples'
  }

    withName: FixVariantNames {
        memory = { check_max( 4.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = { 1.hour + 1.minute / 5 * NumberOfSamples }
        clusterOptions = '--job-name=FixVariantNames'
  }

    withName: MakeIndAndProbe {
        memory = { check_max( 4.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = {  1.hour + 1.minute / 5 * NumberOfSamples }
        clusterOptions = '--job-name=MakeIndAndProbe'
  }

    withName: ChunkVcf {
        memory = { check_max( 4.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = { 1.hour + 1.minute / 400 * NumberOfSamples }
        clusterOptions = '--job-name=ChunkVcf'
  }

    withName: FixChunkSize {
        memory = { check_max( 5.GB * task.attempt, 'memory' ) }
        cpus = 4
        time = { 1.hour + 1.minute / 5 * NumberOfSamples }
        clusterOptions = '--job-name=FixChunkSize'
  }

    withName: ConvertGenotypeToHdf5 {
        memory = { check_max( 2.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = { check_max( 10.min * task.attempt, 'time' ) }
        clusterOptions = '--job-name=ConvertGenotypeToHdf5'
  }

    withName: TabixFilteredVcfInput {
        memory = { check_max( 4.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = { 1.hour + 1.minute / 100 * NumberOfSamples }
        clusterOptions = '--job-name=TabixFilteredVcfInput'
  }

    withName: CalculateSnpQcMetrics {
        memory = { check_max( 10.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = { 1.hour + 1.minute / 5 * NumberOfSamples }
        clusterOptions = '--job-name=CalculateSnpQcMetrics'
  }

    withName: CompressSnpQcFile {
        memory = { check_max( 5.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = { 1.hour }
        clusterOptions = '--job-name=CompressSnpQcFile'
  }

    withName: OutputVcf {
        memory = { check_max( 2.GB * task.attempt, 'memory' ) }
        cpus = 1
        time = { check_max( 1.h * task.attempt, 'time' ) }
        clusterOptions = '--job-name=OutputVcf'
  }

}
